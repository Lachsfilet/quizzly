datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}


generator client {
  provider = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

model Option {
  id          String    @id @default(cuid())
  title       String
  isCorrect   Boolean
  question    Question  @relation(fields: [questionId], references: [id], onDelete: Cascade)
  questionId  String
  createdAt   DateTime  @default(now())
}

model Question {
  id          String    @id @default(cuid())
  title       String
  description String?
  quiz        Quiz      @relation(fields: [quizId], references: [id], onDelete: Cascade)
  quizId      String
  options     Option[]
  createdAt   DateTime  @default(now())
}

model Quiz {
  id          String    @id @default(cuid())
  title       String
  description String?
  questions   Question[]
  userId      String
  createdAt   DateTime  @default(now())
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
  createdAt     DateTime  @default(now())
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}
model VerificationToken {
  id        String   @id @default(cuid())
  email     String
  token     String  @unique
  expires   DateTime

  @@unique([email, token])
}

model PasswordResetToken {
  id       String   @id @default(cuid())
  email     String
  token     String  @unique
  expires   DateTime

  @@unique([email, token])
}